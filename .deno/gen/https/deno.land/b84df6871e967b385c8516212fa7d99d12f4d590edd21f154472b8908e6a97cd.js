// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.
import { fromFileUrl } from "../path.ts";
import { promisify } from "../internal/util.mjs";
/**
 * TODO: Also accept 'path' parameter as a Node polyfill Buffer type once these
 * are implemented. See https://github.com/denoland/deno/issues/3403
 */ export function link(existingPath, newPath, callback) {
    existingPath = existingPath instanceof URL ? fromFileUrl(existingPath) : existingPath;
    newPath = newPath instanceof URL ? fromFileUrl(newPath) : newPath;
    Deno.link(existingPath, newPath).then(()=>callback(null), callback);
}
/**
 * TODO: Also accept 'path' parameter as a Node polyfill Buffer type once these
 * are implemented. See https://github.com/denoland/deno/issues/3403
 */ export const linkPromise = promisify(link);
/**
 * TODO: Also accept 'path' parameter as a Node polyfill Buffer type once these
 * are implemented. See https://github.com/denoland/deno/issues/3403
 */ export function linkSync(existingPath, newPath) {
    existingPath = existingPath instanceof URL ? fromFileUrl(existingPath) : existingPath;
    newPath = newPath instanceof URL ? fromFileUrl(newPath) : newPath;
    Deno.linkSync(existingPath, newPath);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjE2Ny4wL25vZGUvX2ZzL19mc19saW5rLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjIgdGhlIERlbm8gYXV0aG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gTUlUIGxpY2Vuc2UuXG5pbXBvcnQgdHlwZSB7IENhbGxiYWNrV2l0aEVycm9yIH0gZnJvbSBcIi4vX2ZzX2NvbW1vbi50c1wiO1xuaW1wb3J0IHsgZnJvbUZpbGVVcmwgfSBmcm9tIFwiLi4vcGF0aC50c1wiO1xuaW1wb3J0IHsgcHJvbWlzaWZ5IH0gZnJvbSBcIi4uL2ludGVybmFsL3V0aWwubWpzXCI7XG5cbi8qKlxuICogVE9ETzogQWxzbyBhY2NlcHQgJ3BhdGgnIHBhcmFtZXRlciBhcyBhIE5vZGUgcG9seWZpbGwgQnVmZmVyIHR5cGUgb25jZSB0aGVzZVxuICogYXJlIGltcGxlbWVudGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2Rlbm9sYW5kL2Rlbm8vaXNzdWVzLzM0MDNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxpbmsoXG4gIGV4aXN0aW5nUGF0aDogc3RyaW5nIHwgVVJMLFxuICBuZXdQYXRoOiBzdHJpbmcgfCBVUkwsXG4gIGNhbGxiYWNrOiBDYWxsYmFja1dpdGhFcnJvcixcbikge1xuICBleGlzdGluZ1BhdGggPSBleGlzdGluZ1BhdGggaW5zdGFuY2VvZiBVUkxcbiAgICA/IGZyb21GaWxlVXJsKGV4aXN0aW5nUGF0aClcbiAgICA6IGV4aXN0aW5nUGF0aDtcbiAgbmV3UGF0aCA9IG5ld1BhdGggaW5zdGFuY2VvZiBVUkwgPyBmcm9tRmlsZVVybChuZXdQYXRoKSA6IG5ld1BhdGg7XG5cbiAgRGVuby5saW5rKGV4aXN0aW5nUGF0aCwgbmV3UGF0aCkudGhlbigoKSA9PiBjYWxsYmFjayhudWxsKSwgY2FsbGJhY2spO1xufVxuXG4vKipcbiAqIFRPRE86IEFsc28gYWNjZXB0ICdwYXRoJyBwYXJhbWV0ZXIgYXMgYSBOb2RlIHBvbHlmaWxsIEJ1ZmZlciB0eXBlIG9uY2UgdGhlc2VcbiAqIGFyZSBpbXBsZW1lbnRlZC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9kZW5vbGFuZC9kZW5vL2lzc3Vlcy8zNDAzXG4gKi9cbmV4cG9ydCBjb25zdCBsaW5rUHJvbWlzZSA9IHByb21pc2lmeShsaW5rKSBhcyAoXG4gIGV4aXN0aW5nUGF0aDogc3RyaW5nIHwgVVJMLFxuICBuZXdQYXRoOiBzdHJpbmcgfCBVUkwsXG4pID0+IFByb21pc2U8dm9pZD47XG5cbi8qKlxuICogVE9ETzogQWxzbyBhY2NlcHQgJ3BhdGgnIHBhcmFtZXRlciBhcyBhIE5vZGUgcG9seWZpbGwgQnVmZmVyIHR5cGUgb25jZSB0aGVzZVxuICogYXJlIGltcGxlbWVudGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2Rlbm9sYW5kL2Rlbm8vaXNzdWVzLzM0MDNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxpbmtTeW5jKFxuICBleGlzdGluZ1BhdGg6IHN0cmluZyB8IFVSTCxcbiAgbmV3UGF0aDogc3RyaW5nIHwgVVJMLFxuKSB7XG4gIGV4aXN0aW5nUGF0aCA9IGV4aXN0aW5nUGF0aCBpbnN0YW5jZW9mIFVSTFxuICAgID8gZnJvbUZpbGVVcmwoZXhpc3RpbmdQYXRoKVxuICAgIDogZXhpc3RpbmdQYXRoO1xuICBuZXdQYXRoID0gbmV3UGF0aCBpbnN0YW5jZW9mIFVSTCA/IGZyb21GaWxlVXJsKG5ld1BhdGgpIDogbmV3UGF0aDtcblxuICBEZW5vLmxpbmtTeW5jKGV4aXN0aW5nUGF0aCwgbmV3UGF0aCk7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMEVBQTBFO0FBRTFFLFNBQVMsV0FBVyxRQUFRLGFBQWE7QUFDekMsU0FBUyxTQUFTLFFBQVEsdUJBQXVCO0FBRWpEOzs7Q0FHQyxHQUNELE9BQU8sU0FBUyxLQUNkLFlBQTBCLEVBQzFCLE9BQXFCLEVBQ3JCLFFBQTJCLEVBQzNCO0lBQ0EsZUFBZSx3QkFBd0IsTUFDbkMsWUFBWSxnQkFDWixZQUFZO0lBQ2hCLFVBQVUsbUJBQW1CLE1BQU0sWUFBWSxXQUFXLE9BQU87SUFFakUsS0FBSyxJQUFJLENBQUMsY0FBYyxTQUFTLElBQUksQ0FBQyxJQUFNLFNBQVMsSUFBSSxHQUFHO0FBQzlELENBQUM7QUFFRDs7O0NBR0MsR0FDRCxPQUFPLE1BQU0sY0FBYyxVQUFVLE1BR2xCO0FBRW5COzs7Q0FHQyxHQUNELE9BQU8sU0FBUyxTQUNkLFlBQTBCLEVBQzFCLE9BQXFCLEVBQ3JCO0lBQ0EsZUFBZSx3QkFBd0IsTUFDbkMsWUFBWSxnQkFDWixZQUFZO0lBQ2hCLFVBQVUsbUJBQW1CLE1BQU0sWUFBWSxXQUFXLE9BQU87SUFFakUsS0FBSyxRQUFRLENBQUMsY0FBYztBQUM5QixDQUFDIn0=